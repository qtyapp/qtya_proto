# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rtc.room import room_pb2 as rtc_dot_room_dot_room__pb2


class RoomServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRoom = channel.unary_unary(
                '/room.RoomService/CreateRoom',
                request_serializer=rtc_dot_room_dot_room__pb2.CreateRoomRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.CreateRoomReply.FromString,
                )
        self.UpdateRoom = channel.unary_unary(
                '/room.RoomService/UpdateRoom',
                request_serializer=rtc_dot_room_dot_room__pb2.UpdateRoomRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.UpdateRoomReply.FromString,
                )
        self.EndRoom = channel.unary_unary(
                '/room.RoomService/EndRoom',
                request_serializer=rtc_dot_room_dot_room__pb2.EndRoomRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.EndRoomReply.FromString,
                )
        self.GetRooms = channel.unary_unary(
                '/room.RoomService/GetRooms',
                request_serializer=rtc_dot_room_dot_room__pb2.GetRoomsRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.GetRoomsReply.FromString,
                )
        self.AddPeer = channel.unary_unary(
                '/room.RoomService/AddPeer',
                request_serializer=rtc_dot_room_dot_room__pb2.AddPeerRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.AddPeerReply.FromString,
                )
        self.UpdatePeer = channel.unary_unary(
                '/room.RoomService/UpdatePeer',
                request_serializer=rtc_dot_room_dot_room__pb2.UpdatePeerRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.UpdatePeerReply.FromString,
                )
        self.RemovePeer = channel.unary_unary(
                '/room.RoomService/RemovePeer',
                request_serializer=rtc_dot_room_dot_room__pb2.RemovePeerRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.RemovePeerReply.FromString,
                )
        self.GetPeers = channel.unary_unary(
                '/room.RoomService/GetPeers',
                request_serializer=rtc_dot_room_dot_room__pb2.GetPeersRequest.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.GetPeersReply.FromString,
                )


class RoomServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRoom(self, request, context):
        """Manager API
        Room API
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRooms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPeer(self, request, context):
        """Peer API
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoomServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRoom,
                    request_deserializer=rtc_dot_room_dot_room__pb2.CreateRoomRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.CreateRoomReply.SerializeToString,
            ),
            'UpdateRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRoom,
                    request_deserializer=rtc_dot_room_dot_room__pb2.UpdateRoomRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.UpdateRoomReply.SerializeToString,
            ),
            'EndRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.EndRoom,
                    request_deserializer=rtc_dot_room_dot_room__pb2.EndRoomRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.EndRoomReply.SerializeToString,
            ),
            'GetRooms': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRooms,
                    request_deserializer=rtc_dot_room_dot_room__pb2.GetRoomsRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.GetRoomsReply.SerializeToString,
            ),
            'AddPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPeer,
                    request_deserializer=rtc_dot_room_dot_room__pb2.AddPeerRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.AddPeerReply.SerializeToString,
            ),
            'UpdatePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePeer,
                    request_deserializer=rtc_dot_room_dot_room__pb2.UpdatePeerRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.UpdatePeerReply.SerializeToString,
            ),
            'RemovePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePeer,
                    request_deserializer=rtc_dot_room_dot_room__pb2.RemovePeerRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.RemovePeerReply.SerializeToString,
            ),
            'GetPeers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeers,
                    request_deserializer=rtc_dot_room_dot_room__pb2.GetPeersRequest.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.GetPeersReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'room.RoomService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoomService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/CreateRoom',
            rtc_dot_room_dot_room__pb2.CreateRoomRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.CreateRoomReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/UpdateRoom',
            rtc_dot_room_dot_room__pb2.UpdateRoomRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.UpdateRoomReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/EndRoom',
            rtc_dot_room_dot_room__pb2.EndRoomRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.EndRoomReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRooms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/GetRooms',
            rtc_dot_room_dot_room__pb2.GetRoomsRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.GetRoomsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/AddPeer',
            rtc_dot_room_dot_room__pb2.AddPeerRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.AddPeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/UpdatePeer',
            rtc_dot_room_dot_room__pb2.UpdatePeerRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.UpdatePeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemovePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/RemovePeer',
            rtc_dot_room_dot_room__pb2.RemovePeerRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.RemovePeerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/room.RoomService/GetPeers',
            rtc_dot_room_dot_room__pb2.GetPeersRequest.SerializeToString,
            rtc_dot_room_dot_room__pb2.GetPeersReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RoomSignalStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Signal = channel.stream_stream(
                '/room.RoomSignal/Signal',
                request_serializer=rtc_dot_room_dot_room__pb2.Request.SerializeToString,
                response_deserializer=rtc_dot_room_dot_room__pb2.Reply.FromString,
                )


class RoomSignalServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Signal(self, request_iterator, context):
        """Signal
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoomSignalServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Signal': grpc.stream_stream_rpc_method_handler(
                    servicer.Signal,
                    request_deserializer=rtc_dot_room_dot_room__pb2.Request.FromString,
                    response_serializer=rtc_dot_room_dot_room__pb2.Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'room.RoomSignal', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RoomSignal(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Signal(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/room.RoomSignal/Signal',
            rtc_dot_room_dot_room__pb2.Request.SerializeToString,
            rtc_dot_room_dot_room__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
