// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: qtya/detect/train_service.proto

package detect

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Size2D
type Size2D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Size2D) Reset() {
	*x = Size2D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size2D) ProtoMessage() {}

func (x *Size2D) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size2D.ProtoReflect.Descriptor instead.
func (*Size2D) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{0}
}

func (x *Size2D) GetWidth() uint64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Size2D) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// DetectRequest starts a detection on a frame
type DetectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetectorType  string  `protobuf:"bytes,1,opt,name=detector_type,json=detectorType,proto3" json:"detector_type,omitempty"` // HAAR, KERAS, SSD
	DetectScene   *Size2D `protobuf:"bytes,2,opt,name=detect_scene,json=detectScene,proto3" json:"detect_scene,omitempty"`
	OriginalScene *Size2D `protobuf:"bytes,3,opt,name=original_scene,json=originalScene,proto3" json:"original_scene,omitempty"`
	Debug         bool    `protobuf:"varint,4,opt,name=debug,proto3" json:"debug,omitempty"`
	UseGpu        bool    `protobuf:"varint,5,opt,name=use_gpu,json=useGpu,proto3" json:"use_gpu,omitempty"`
	ModelWorkers  uint64  `protobuf:"varint,6,opt,name=model_workers,json=modelWorkers,proto3" json:"model_workers,omitempty"`
	DetectWorkers uint64  `protobuf:"varint,7,opt,name=detect_workers,json=detectWorkers,proto3" json:"detect_workers,omitempty"`
	StreamWorkers uint64  `protobuf:"varint,8,opt,name=stream_workers,json=streamWorkers,proto3" json:"stream_workers,omitempty"`
	// Keras model to identify faces
	FacesDbModel string `protobuf:"bytes,9,opt,name=faces_db_model,json=facesDbModel,proto3" json:"faces_db_model,omitempty"`
	// detect_type - only new
	// detect_type - all
	DetectType uint32 `protobuf:"varint,10,opt,name=detect_type,json=detectType,proto3" json:"detect_type,omitempty"`
	// Export detected faces
	ExportFaces bool   `protobuf:"varint,11,opt,name=export_faces,json=exportFaces,proto3" json:"export_faces,omitempty"`
	ExportPath  string `protobuf:"bytes,12,opt,name=export_path,json=exportPath,proto3" json:"export_path,omitempty"`
	// Useful for debugging recognizers
	DisableAutoFrames bool `protobuf:"varint,13,opt,name=disable_auto_frames,json=disableAutoFrames,proto3" json:"disable_auto_frames,omitempty"`
	// Face detection min/max sizes
	FaceMinSize *Size2D `protobuf:"bytes,14,opt,name=face_min_size,json=faceMinSize,proto3" json:"face_min_size,omitempty"`
	FaceMaxSize *Size2D `protobuf:"bytes,15,opt,name=face_max_size,json=faceMaxSize,proto3" json:"face_max_size,omitempty"`
}

func (x *DetectRequest) Reset() {
	*x = DetectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectRequest) ProtoMessage() {}

func (x *DetectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectRequest.ProtoReflect.Descriptor instead.
func (*DetectRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{1}
}

func (x *DetectRequest) GetDetectorType() string {
	if x != nil {
		return x.DetectorType
	}
	return ""
}

func (x *DetectRequest) GetDetectScene() *Size2D {
	if x != nil {
		return x.DetectScene
	}
	return nil
}

func (x *DetectRequest) GetOriginalScene() *Size2D {
	if x != nil {
		return x.OriginalScene
	}
	return nil
}

func (x *DetectRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *DetectRequest) GetUseGpu() bool {
	if x != nil {
		return x.UseGpu
	}
	return false
}

func (x *DetectRequest) GetModelWorkers() uint64 {
	if x != nil {
		return x.ModelWorkers
	}
	return 0
}

func (x *DetectRequest) GetDetectWorkers() uint64 {
	if x != nil {
		return x.DetectWorkers
	}
	return 0
}

func (x *DetectRequest) GetStreamWorkers() uint64 {
	if x != nil {
		return x.StreamWorkers
	}
	return 0
}

func (x *DetectRequest) GetFacesDbModel() string {
	if x != nil {
		return x.FacesDbModel
	}
	return ""
}

func (x *DetectRequest) GetDetectType() uint32 {
	if x != nil {
		return x.DetectType
	}
	return 0
}

func (x *DetectRequest) GetExportFaces() bool {
	if x != nil {
		return x.ExportFaces
	}
	return false
}

func (x *DetectRequest) GetExportPath() string {
	if x != nil {
		return x.ExportPath
	}
	return ""
}

func (x *DetectRequest) GetDisableAutoFrames() bool {
	if x != nil {
		return x.DisableAutoFrames
	}
	return false
}

func (x *DetectRequest) GetFaceMinSize() *Size2D {
	if x != nil {
		return x.FaceMinSize
	}
	return nil
}

func (x *DetectRequest) GetFaceMaxSize() *Size2D {
	if x != nil {
		return x.FaceMaxSize
	}
	return nil
}

type DetectResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	VideoInfo  *VideoInfo  `protobuf:"bytes,2,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	DetectInfo string      `protobuf:"bytes,3,opt,name=detect_info,json=detectInfo,proto3" json:"detect_info,omitempty"`
	FrameId    uint64      `protobuf:"varint,4,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Faces      []*FaceInfo `protobuf:"bytes,5,rep,name=faces,proto3" json:"faces,omitempty"`
	Source     string      `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	Resolution *Size2D     `protobuf:"bytes,7,opt,name=resolution,proto3" json:"resolution,omitempty"`
}

func (x *DetectResult) Reset() {
	*x = DetectResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectResult) ProtoMessage() {}

func (x *DetectResult) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectResult.ProtoReflect.Descriptor instead.
func (*DetectResult) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{2}
}

func (x *DetectResult) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *DetectResult) GetVideoInfo() *VideoInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

func (x *DetectResult) GetDetectInfo() string {
	if x != nil {
		return x.DetectInfo
	}
	return ""
}

func (x *DetectResult) GetFrameId() uint64 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *DetectResult) GetFaces() []*FaceInfo {
	if x != nil {
		return x.Faces
	}
	return nil
}

func (x *DetectResult) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DetectResult) GetResolution() *Size2D {
	if x != nil {
		return x.Resolution
	}
	return nil
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameCount     uint64  `protobuf:"varint,1,opt,name=frame_count,json=frameCount,proto3" json:"frame_count,omitempty"`
	FrameRate      uint64  `protobuf:"varint,2,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	Resolution     *Size2D `protobuf:"bytes,3,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Position       uint64  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	PlaybackStatus uint64  `protobuf:"varint,5,opt,name=playback_status,json=playbackStatus,proto3" json:"playback_status,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{3}
}

func (x *VideoInfo) GetFrameCount() uint64 {
	if x != nil {
		return x.FrameCount
	}
	return 0
}

func (x *VideoInfo) GetFrameRate() uint64 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *VideoInfo) GetResolution() *Size2D {
	if x != nil {
		return x.Resolution
	}
	return nil
}

func (x *VideoInfo) GetPosition() uint64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VideoInfo) GetPlaybackStatus() uint64 {
	if x != nil {
		return x.PlaybackStatus
	}
	return 0
}

// Status Request
type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{4}
}

func (x *StatusRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// StatusUpdate - the status of the session
type StatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	VideoInfo   string `protobuf:"bytes,2,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	DetectState string `protobuf:"bytes,3,opt,name=detect_state,json=detectState,proto3" json:"detect_state,omitempty"`
	// On recorded video only
	FrameId    *uint64 `protobuf:"varint,4,opt,name=frame_id,json=frameId,proto3,oneof" json:"frame_id,omitempty"`
	Source     string  `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	StreamType uint32  `protobuf:"varint,6,opt,name=stream_type,json=streamType,proto3" json:"stream_type,omitempty"`
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{5}
}

func (x *StatusUpdate) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StatusUpdate) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

func (x *StatusUpdate) GetDetectState() string {
	if x != nil {
		return x.DetectState
	}
	return ""
}

func (x *StatusUpdate) GetFrameId() uint64 {
	if x != nil && x.FrameId != nil {
		return *x.FrameId
	}
	return 0
}

func (x *StatusUpdate) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *StatusUpdate) GetStreamType() uint32 {
	if x != nil {
		return x.StreamType
	}
	return 0
}

// FaceInfo is a detected face representation
type FaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame      uint64 `protobuf:"varint,1,opt,name=frame,proto3" json:"frame,omitempty"`
	X          uint64 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y          uint64 `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Width      uint64 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height     uint64 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Gender     uint64 `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Age        uint64 `protobuf:"varint,7,opt,name=age,proto3" json:"age,omitempty"`
	Confidence uint64 `protobuf:"varint,8,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Name       string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FaceInfo) Reset() {
	*x = FaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceInfo) ProtoMessage() {}

func (x *FaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceInfo.ProtoReflect.Descriptor instead.
func (*FaceInfo) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{6}
}

func (x *FaceInfo) GetFrame() uint64 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *FaceInfo) GetX() uint64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *FaceInfo) GetY() uint64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *FaceInfo) GetWidth() uint64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FaceInfo) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FaceInfo) GetGender() uint64 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *FaceInfo) GetAge() uint64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *FaceInfo) GetConfidence() uint64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *FaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// OpenDeviceResponse is a response to an OpenDeviceRequest
type OpenDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Success    bool    `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error      string  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Position   uint64  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	Resolution *Size2D `protobuf:"bytes,5,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Fps        uint32  `protobuf:"varint,6,opt,name=fps,proto3" json:"fps,omitempty"`
}

func (x *OpenDeviceResponse) Reset() {
	*x = OpenDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDeviceResponse) ProtoMessage() {}

func (x *OpenDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDeviceResponse.ProtoReflect.Descriptor instead.
func (*OpenDeviceResponse) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{7}
}

func (x *OpenDeviceResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *OpenDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OpenDeviceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *OpenDeviceResponse) GetPosition() uint64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *OpenDeviceResponse) GetResolution() *Size2D {
	if x != nil {
		return x.Resolution
	}
	return nil
}

func (x *OpenDeviceResponse) GetFps() uint32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

// OpenFileRequest
type OpenFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	FilePath  string  `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Position  *uint64 `protobuf:"varint,3,opt,name=position,proto3,oneof" json:"position,omitempty"`
}

func (x *OpenFileRequest) Reset() {
	*x = OpenFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileRequest) ProtoMessage() {}

func (x *OpenFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileRequest.ProtoReflect.Descriptor instead.
func (*OpenFileRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{8}
}

func (x *OpenFileRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *OpenFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *OpenFileRequest) GetPosition() uint64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type OpenLocalCamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CamId      uint64  `protobuf:"varint,2,opt,name=cam_id,json=camId,proto3" json:"cam_id,omitempty"`
	Resolution *Size2D `protobuf:"bytes,3,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Fps        uint32  `protobuf:"varint,4,opt,name=fps,proto3" json:"fps,omitempty"`
}

func (x *OpenLocalCamRequest) Reset() {
	*x = OpenLocalCamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenLocalCamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenLocalCamRequest) ProtoMessage() {}

func (x *OpenLocalCamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenLocalCamRequest.ProtoReflect.Descriptor instead.
func (*OpenLocalCamRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{9}
}

func (x *OpenLocalCamRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *OpenLocalCamRequest) GetCamId() uint64 {
	if x != nil {
		return x.CamId
	}
	return 0
}

func (x *OpenLocalCamRequest) GetResolution() *Size2D {
	if x != nil {
		return x.Resolution
	}
	return nil
}

func (x *OpenLocalCamRequest) GetFps() uint32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

type OpenRemoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Url          string  `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Resolution   *Size2D `protobuf:"bytes,3,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Fps          uint32  `protobuf:"varint,4,opt,name=fps,proto3" json:"fps,omitempty"`
	Username     string  `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password     string  `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	SecondStream bool    `protobuf:"varint,7,opt,name=second_stream,json=secondStream,proto3" json:"second_stream,omitempty"`
}

func (x *OpenRemoteRequest) Reset() {
	*x = OpenRemoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRemoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRemoteRequest) ProtoMessage() {}

func (x *OpenRemoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRemoteRequest.ProtoReflect.Descriptor instead.
func (*OpenRemoteRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{10}
}

func (x *OpenRemoteRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *OpenRemoteRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpenRemoteRequest) GetResolution() *Size2D {
	if x != nil {
		return x.Resolution
	}
	return nil
}

func (x *OpenRemoteRequest) GetFps() uint32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *OpenRemoteRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OpenRemoteRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *OpenRemoteRequest) GetSecondStream() bool {
	if x != nil {
		return x.SecondStream
	}
	return false
}

// Open Request opens a file/cam/image
type OpenStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Device:
	//
	//	*OpenStreamRequest_OpenFile
	//	*OpenStreamRequest_OpenLocalCam
	//	*OpenStreamRequest_OpenRemote
	Device isOpenStreamRequest_Device `protobuf_oneof:"device"`
}

func (x *OpenStreamRequest) Reset() {
	*x = OpenStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenStreamRequest) ProtoMessage() {}

func (x *OpenStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenStreamRequest.ProtoReflect.Descriptor instead.
func (*OpenStreamRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{11}
}

func (m *OpenStreamRequest) GetDevice() isOpenStreamRequest_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (x *OpenStreamRequest) GetOpenFile() *OpenFileRequest {
	if x, ok := x.GetDevice().(*OpenStreamRequest_OpenFile); ok {
		return x.OpenFile
	}
	return nil
}

func (x *OpenStreamRequest) GetOpenLocalCam() *OpenLocalCamRequest {
	if x, ok := x.GetDevice().(*OpenStreamRequest_OpenLocalCam); ok {
		return x.OpenLocalCam
	}
	return nil
}

func (x *OpenStreamRequest) GetOpenRemote() *OpenRemoteRequest {
	if x, ok := x.GetDevice().(*OpenStreamRequest_OpenRemote); ok {
		return x.OpenRemote
	}
	return nil
}

type isOpenStreamRequest_Device interface {
	isOpenStreamRequest_Device()
}

type OpenStreamRequest_OpenFile struct {
	OpenFile *OpenFileRequest `protobuf:"bytes,1,opt,name=open_file,json=openFile,proto3,oneof"`
}

type OpenStreamRequest_OpenLocalCam struct {
	OpenLocalCam *OpenLocalCamRequest `protobuf:"bytes,2,opt,name=open_local_cam,json=openLocalCam,proto3,oneof"`
}

type OpenStreamRequest_OpenRemote struct {
	OpenRemote *OpenRemoteRequest `protobuf:"bytes,3,opt,name=open_remote,json=openRemote,proto3,oneof"`
}

func (*OpenStreamRequest_OpenFile) isOpenStreamRequest_Device() {}

func (*OpenStreamRequest_OpenLocalCam) isOpenStreamRequest_Device() {}

func (*OpenStreamRequest_OpenRemote) isOpenStreamRequest_Device() {}

// VideoControlRequest
type VideoControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Position uint64 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *VideoControlRequest) Reset() {
	*x = VideoControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoControlRequest) ProtoMessage() {}

func (x *VideoControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoControlRequest.ProtoReflect.Descriptor instead.
func (*VideoControlRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{12}
}

func (x *VideoControlRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *VideoControlRequest) GetPosition() uint64 {
	if x != nil {
		return x.Position
	}
	return 0
}

// EventStreamResponse
type DetectRemoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Updates:
	//
	//	*DetectRemoteResponse_Status
	//	*DetectRemoteResponse_OpenDeviceResponse
	//	*DetectRemoteResponse_DetectResult
	Updates isDetectRemoteResponse_Updates `protobuf_oneof:"updates"`
}

func (x *DetectRemoteResponse) Reset() {
	*x = DetectRemoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectRemoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectRemoteResponse) ProtoMessage() {}

func (x *DetectRemoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectRemoteResponse.ProtoReflect.Descriptor instead.
func (*DetectRemoteResponse) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{13}
}

func (m *DetectRemoteResponse) GetUpdates() isDetectRemoteResponse_Updates {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (x *DetectRemoteResponse) GetStatus() *StatusUpdate {
	if x, ok := x.GetUpdates().(*DetectRemoteResponse_Status); ok {
		return x.Status
	}
	return nil
}

func (x *DetectRemoteResponse) GetOpenDeviceResponse() *OpenDeviceResponse {
	if x, ok := x.GetUpdates().(*DetectRemoteResponse_OpenDeviceResponse); ok {
		return x.OpenDeviceResponse
	}
	return nil
}

func (x *DetectRemoteResponse) GetDetectResult() *DetectResult {
	if x, ok := x.GetUpdates().(*DetectRemoteResponse_DetectResult); ok {
		return x.DetectResult
	}
	return nil
}

type isDetectRemoteResponse_Updates interface {
	isDetectRemoteResponse_Updates()
}

type DetectRemoteResponse_Status struct {
	Status *StatusUpdate `protobuf:"bytes,1,opt,name=status,proto3,oneof"`
}

type DetectRemoteResponse_OpenDeviceResponse struct {
	OpenDeviceResponse *OpenDeviceResponse `protobuf:"bytes,2,opt,name=open_device_response,json=openDeviceResponse,proto3,oneof"`
}

type DetectRemoteResponse_DetectResult struct {
	DetectResult *DetectResult `protobuf:"bytes,3,opt,name=detect_result,json=detectResult,proto3,oneof"`
}

func (*DetectRemoteResponse_Status) isDetectRemoteResponse_Updates() {}

func (*DetectRemoteResponse_OpenDeviceResponse) isDetectRemoteResponse_Updates() {}

func (*DetectRemoteResponse_DetectResult) isDetectRemoteResponse_Updates() {}

// DetectRemoteRequest
type DetectRemoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*DetectRemoteRequest_OpenStream
	//	*DetectRemoteRequest_VideoControl
	//	*DetectRemoteRequest_Detect
	//	*DetectRemoteRequest_Status
	Request isDetectRemoteRequest_Request `protobuf_oneof:"request"`
}

func (x *DetectRemoteRequest) Reset() {
	*x = DetectRemoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_detect_train_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectRemoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectRemoteRequest) ProtoMessage() {}

func (x *DetectRemoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_detect_train_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectRemoteRequest.ProtoReflect.Descriptor instead.
func (*DetectRemoteRequest) Descriptor() ([]byte, []int) {
	return file_qtya_detect_train_service_proto_rawDescGZIP(), []int{14}
}

func (m *DetectRemoteRequest) GetRequest() isDetectRemoteRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *DetectRemoteRequest) GetOpenStream() *OpenStreamRequest {
	if x, ok := x.GetRequest().(*DetectRemoteRequest_OpenStream); ok {
		return x.OpenStream
	}
	return nil
}

func (x *DetectRemoteRequest) GetVideoControl() *VideoControlRequest {
	if x, ok := x.GetRequest().(*DetectRemoteRequest_VideoControl); ok {
		return x.VideoControl
	}
	return nil
}

func (x *DetectRemoteRequest) GetDetect() *DetectRequest {
	if x, ok := x.GetRequest().(*DetectRemoteRequest_Detect); ok {
		return x.Detect
	}
	return nil
}

func (x *DetectRemoteRequest) GetStatus() *StatusRequest {
	if x, ok := x.GetRequest().(*DetectRemoteRequest_Status); ok {
		return x.Status
	}
	return nil
}

type isDetectRemoteRequest_Request interface {
	isDetectRemoteRequest_Request()
}

type DetectRemoteRequest_OpenStream struct {
	OpenStream *OpenStreamRequest `protobuf:"bytes,1,opt,name=open_stream,json=openStream,proto3,oneof"`
}

type DetectRemoteRequest_VideoControl struct {
	VideoControl *VideoControlRequest `protobuf:"bytes,2,opt,name=video_control,json=videoControl,proto3,oneof"`
}

type DetectRemoteRequest_Detect struct {
	Detect *DetectRequest `protobuf:"bytes,3,opt,name=detect,proto3,oneof"`
}

type DetectRemoteRequest_Status struct {
	Status *StatusRequest `protobuf:"bytes,4,opt,name=status,proto3,oneof"`
}

func (*DetectRemoteRequest_OpenStream) isDetectRemoteRequest_Request() {}

func (*DetectRemoteRequest_VideoControl) isDetectRemoteRequest_Request() {}

func (*DetectRemoteRequest_Detect) isDetectRemoteRequest_Request() {}

func (*DetectRemoteRequest_Status) isDetectRemoteRequest_Request() {}

var File_qtya_detect_train_service_proto protoreflect.FileDescriptor

var file_qtya_detect_train_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x71, 0x74, 0x79, 0x61, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x36, 0x0a, 0x06, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xf7, 0x04, 0x0a, 0x0d, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x36, 0x0a, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0b, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x69,
	0x7a, 0x65, 0x32, 0x44, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x5f, 0x67, 0x70, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x47,
	0x70, 0x75, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x64,
	0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x44, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x37, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0b, 0x66, 0x61,
	0x63, 0x65, 0x4d, 0x69, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x78, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x7a,
	0x65, 0x32, 0x44, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xc5, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e,
	0x53, 0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x22,
	0xc8, 0x01, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x66, 0x70, 0x73, 0x22, 0x7b, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x92, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x2e, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x66, 0x70, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x32, 0x44, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x66, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x22, 0xe7, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x74, 0x79, 0x61,
	0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x63, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x74,
	0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x43, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x6d, 0x12, 0x41, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xed, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x53, 0x0a, 0x14, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x98, 0x02, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x47, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x74, 0x79, 0x61,
	0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x32, 0x6a, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x12, 0x20, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2a, 0x5a, 0x28,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x2f, 0x71, 0x74, 0x79, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x74, 0x79,
	0x61, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qtya_detect_train_service_proto_rawDescOnce sync.Once
	file_qtya_detect_train_service_proto_rawDescData = file_qtya_detect_train_service_proto_rawDesc
)

func file_qtya_detect_train_service_proto_rawDescGZIP() []byte {
	file_qtya_detect_train_service_proto_rawDescOnce.Do(func() {
		file_qtya_detect_train_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_qtya_detect_train_service_proto_rawDescData)
	})
	return file_qtya_detect_train_service_proto_rawDescData
}

var file_qtya_detect_train_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_qtya_detect_train_service_proto_goTypes = []interface{}{
	(*Size2D)(nil),               // 0: qtya.detect.Size2D
	(*DetectRequest)(nil),        // 1: qtya.detect.DetectRequest
	(*DetectResult)(nil),         // 2: qtya.detect.DetectResult
	(*VideoInfo)(nil),            // 3: qtya.detect.VideoInfo
	(*StatusRequest)(nil),        // 4: qtya.detect.StatusRequest
	(*StatusUpdate)(nil),         // 5: qtya.detect.StatusUpdate
	(*FaceInfo)(nil),             // 6: qtya.detect.FaceInfo
	(*OpenDeviceResponse)(nil),   // 7: qtya.detect.OpenDeviceResponse
	(*OpenFileRequest)(nil),      // 8: qtya.detect.OpenFileRequest
	(*OpenLocalCamRequest)(nil),  // 9: qtya.detect.OpenLocalCamRequest
	(*OpenRemoteRequest)(nil),    // 10: qtya.detect.OpenRemoteRequest
	(*OpenStreamRequest)(nil),    // 11: qtya.detect.OpenStreamRequest
	(*VideoControlRequest)(nil),  // 12: qtya.detect.VideoControlRequest
	(*DetectRemoteResponse)(nil), // 13: qtya.detect.DetectRemoteResponse
	(*DetectRemoteRequest)(nil),  // 14: qtya.detect.DetectRemoteRequest
}
var file_qtya_detect_train_service_proto_depIdxs = []int32{
	0,  // 0: qtya.detect.DetectRequest.detect_scene:type_name -> qtya.detect.Size2D
	0,  // 1: qtya.detect.DetectRequest.original_scene:type_name -> qtya.detect.Size2D
	0,  // 2: qtya.detect.DetectRequest.face_min_size:type_name -> qtya.detect.Size2D
	0,  // 3: qtya.detect.DetectRequest.face_max_size:type_name -> qtya.detect.Size2D
	3,  // 4: qtya.detect.DetectResult.video_info:type_name -> qtya.detect.VideoInfo
	6,  // 5: qtya.detect.DetectResult.faces:type_name -> qtya.detect.FaceInfo
	0,  // 6: qtya.detect.DetectResult.resolution:type_name -> qtya.detect.Size2D
	0,  // 7: qtya.detect.VideoInfo.resolution:type_name -> qtya.detect.Size2D
	0,  // 8: qtya.detect.OpenDeviceResponse.resolution:type_name -> qtya.detect.Size2D
	0,  // 9: qtya.detect.OpenLocalCamRequest.resolution:type_name -> qtya.detect.Size2D
	0,  // 10: qtya.detect.OpenRemoteRequest.resolution:type_name -> qtya.detect.Size2D
	8,  // 11: qtya.detect.OpenStreamRequest.open_file:type_name -> qtya.detect.OpenFileRequest
	9,  // 12: qtya.detect.OpenStreamRequest.open_local_cam:type_name -> qtya.detect.OpenLocalCamRequest
	10, // 13: qtya.detect.OpenStreamRequest.open_remote:type_name -> qtya.detect.OpenRemoteRequest
	5,  // 14: qtya.detect.DetectRemoteResponse.status:type_name -> qtya.detect.StatusUpdate
	7,  // 15: qtya.detect.DetectRemoteResponse.open_device_response:type_name -> qtya.detect.OpenDeviceResponse
	2,  // 16: qtya.detect.DetectRemoteResponse.detect_result:type_name -> qtya.detect.DetectResult
	11, // 17: qtya.detect.DetectRemoteRequest.open_stream:type_name -> qtya.detect.OpenStreamRequest
	12, // 18: qtya.detect.DetectRemoteRequest.video_control:type_name -> qtya.detect.VideoControlRequest
	1,  // 19: qtya.detect.DetectRemoteRequest.detect:type_name -> qtya.detect.DetectRequest
	4,  // 20: qtya.detect.DetectRemoteRequest.status:type_name -> qtya.detect.StatusRequest
	14, // 21: qtya.detect.DetectService.DetectRemote:input_type -> qtya.detect.DetectRemoteRequest
	13, // 22: qtya.detect.DetectService.DetectRemote:output_type -> qtya.detect.DetectRemoteResponse
	22, // [22:23] is the sub-list for method output_type
	21, // [21:22] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_qtya_detect_train_service_proto_init() }
func file_qtya_detect_train_service_proto_init() {
	if File_qtya_detect_train_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qtya_detect_train_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size2D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenLocalCamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRemoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectRemoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_detect_train_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectRemoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qtya_detect_train_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_qtya_detect_train_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_qtya_detect_train_service_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*OpenStreamRequest_OpenFile)(nil),
		(*OpenStreamRequest_OpenLocalCam)(nil),
		(*OpenStreamRequest_OpenRemote)(nil),
	}
	file_qtya_detect_train_service_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*DetectRemoteResponse_Status)(nil),
		(*DetectRemoteResponse_OpenDeviceResponse)(nil),
		(*DetectRemoteResponse_DetectResult)(nil),
	}
	file_qtya_detect_train_service_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*DetectRemoteRequest_OpenStream)(nil),
		(*DetectRemoteRequest_VideoControl)(nil),
		(*DetectRemoteRequest_Detect)(nil),
		(*DetectRemoteRequest_Status)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qtya_detect_train_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qtya_detect_train_service_proto_goTypes,
		DependencyIndexes: file_qtya_detect_train_service_proto_depIdxs,
		MessageInfos:      file_qtya_detect_train_service_proto_msgTypes,
	}.Build()
	File_qtya_detect_train_service_proto = out.File
	file_qtya_detect_train_service_proto_rawDesc = nil
	file_qtya_detect_train_service_proto_goTypes = nil
	file_qtya_detect_train_service_proto_depIdxs = nil
}
