// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: qtya/chat/v1/chat.proto

package chatv1

import (
	v1 "github.com/qtyapp/qtya_proto/qtya/core/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UpdateTarget
type UpdateTarget int32

const (
	// Deprecated: Marked as deprecated in qtya/chat/v1/chat.proto.
	UpdateTarget_UPDATE_TARGET_UNSPECIFIED   UpdateTarget = 0
	UpdateTarget_UPDATE_TARGET_MESSAGE       UpdateTarget = 1
	UpdateTarget_UPDATE_TARGET_USER          UpdateTarget = 2
	UpdateTarget_UPDATE_TARGET_USER_PRESENCE UpdateTarget = 3
	UpdateTarget_UPDATE_TARGET_CALL_CONTEXT  UpdateTarget = 4
)

// Enum value maps for UpdateTarget.
var (
	UpdateTarget_name = map[int32]string{
		0: "UPDATE_TARGET_UNSPECIFIED",
		1: "UPDATE_TARGET_MESSAGE",
		2: "UPDATE_TARGET_USER",
		3: "UPDATE_TARGET_USER_PRESENCE",
		4: "UPDATE_TARGET_CALL_CONTEXT",
	}
	UpdateTarget_value = map[string]int32{
		"UPDATE_TARGET_UNSPECIFIED":   0,
		"UPDATE_TARGET_MESSAGE":       1,
		"UPDATE_TARGET_USER":          2,
		"UPDATE_TARGET_USER_PRESENCE": 3,
		"UPDATE_TARGET_CALL_CONTEXT":  4,
	}
)

func (x UpdateTarget) Enum() *UpdateTarget {
	p := new(UpdateTarget)
	*p = x
	return p
}

func (x UpdateTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_qtya_chat_v1_chat_proto_enumTypes[0].Descriptor()
}

func (UpdateTarget) Type() protoreflect.EnumType {
	return &file_qtya_chat_v1_chat_proto_enumTypes[0]
}

func (x UpdateTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTarget.Descriptor instead.
func (UpdateTarget) EnumDescriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

// MessageType
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNSPECIFIED MessageType = 0
	MessageType_MESSAGE_TYPE_TEXT        MessageType = 1
	MessageType_MESSAGE_TYPE_IMAGE       MessageType = 2
	MessageType_MESSAGE_TYPE_VOICE       MessageType = 3
	MessageType_MESSAGE_TYPE_CALL        MessageType = 4
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNSPECIFIED",
		1: "MESSAGE_TYPE_TEXT",
		2: "MESSAGE_TYPE_IMAGE",
		3: "MESSAGE_TYPE_VOICE",
		4: "MESSAGE_TYPE_CALL",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED": 0,
		"MESSAGE_TYPE_TEXT":        1,
		"MESSAGE_TYPE_IMAGE":       2,
		"MESSAGE_TYPE_VOICE":       3,
		"MESSAGE_TYPE_CALL":        4,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_qtya_chat_v1_chat_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_qtya_chat_v1_chat_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

// MessageReaction
type MessageReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Emoji     string        `protobuf:"bytes,2,opt,name=emoji,proto3" json:"emoji,omitempty"`
	UpdatedAt *v1.ProtoTime `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MessageReaction) Reset() {
	*x = MessageReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReaction) ProtoMessage() {}

func (x *MessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReaction.ProtoReflect.Descriptor instead.
func (*MessageReaction) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *MessageReaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageReaction) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *MessageReaction) GetUpdatedAt() *v1.ProtoTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// ChatMessageUpdate
type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string             `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ConversationId string             `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Message        string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	SenderId       string             `protobuf:"bytes,4,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SentAt         *v1.ProtoTime      `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	Reactions      []*MessageReaction `protobuf:"bytes,6,rep,name=reactions,proto3" json:"reactions,omitempty"`
	DeletedAt      *v1.ProtoTime      `protobuf:"bytes,7,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	DeletedBy      *string            `protobuf:"bytes,8,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`
	MessageType    string             `protobuf:"bytes,9,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	SeenAt         *v1.ProtoTime      `protobuf:"bytes,10,opt,name=seen_at,json=seenAt,proto3,oneof" json:"seen_at,omitempty"` // TODO: add additional data
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessage) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ChatMessage) GetSentAt() *v1.ProtoTime {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *ChatMessage) GetReactions() []*MessageReaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *ChatMessage) GetDeletedAt() *v1.ProtoTime {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ChatMessage) GetDeletedBy() string {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return ""
}

func (x *ChatMessage) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ChatMessage) GetSeenAt() *v1.ProtoTime {
	if x != nil {
		return x.SeenAt
	}
	return nil
}

// Contact primitive
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name           string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email          string        `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	ProfilePicture *string       `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3,oneof" json:"profile_picture,omitempty"`
	Role           string        `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Tel            *string       `protobuf:"bytes,6,opt,name=tel,proto3,oneof" json:"tel,omitempty"`
	City           *string       `protobuf:"bytes,7,opt,name=city,proto3,oneof" json:"city,omitempty"`
	RegisteredAt   *v1.ProtoTime `protobuf:"bytes,8,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	LastOnline     *v1.ProtoTime `protobuf:"bytes,9,opt,name=last_online,json=lastOnline,proto3" json:"last_online,omitempty"`
	QtyaId         *string       `protobuf:"bytes,10,opt,name=qtya_id,json=qtyaId,proto3,oneof" json:"qtya_id,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *Contact) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Contact) GetProfilePicture() string {
	if x != nil && x.ProfilePicture != nil {
		return *x.ProfilePicture
	}
	return ""
}

func (x *Contact) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Contact) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *Contact) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Contact) GetRegisteredAt() *v1.ProtoTime {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *Contact) GetLastOnline() *v1.ProtoTime {
	if x != nil {
		return x.LastOnline
	}
	return nil
}

func (x *Contact) GetQtyaId() string {
	if x != nil && x.QtyaId != nil {
		return *x.QtyaId
	}
	return ""
}

// ReadMarker
type ReadMarker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User read marker
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Position of the marker
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *ReadMarker) Reset() {
	*x = ReadMarker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMarker) ProtoMessage() {}

func (x *ReadMarker) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMarker.ProtoReflect.Descriptor instead.
func (*ReadMarker) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ReadMarker) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadMarker) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the conversation
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// Name of the conversation, the default name is the chat partner
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Last sent message
	LastMessage string `protobuf:"bytes,3,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	// Last message delivery time
	LastMessageAt *v1.ProtoTime `protobuf:"bytes,4,opt,name=last_message_at,json=lastMessageAt,proto3" json:"last_message_at,omitempty"`
	// Is this delivered to the client (requested at least once)
	Delivered bool `protobuf:"varint,5,opt,name=delivered,proto3" json:"delivered,omitempty"`
	// Picture of the conversation
	CustomPictureUrl *string `protobuf:"bytes,6,opt,name=custom_picture_url,json=customPictureUrl,proto3,oneof" json:"custom_picture_url,omitempty"`
	// UserID list of the members
	Participants []string `protobuf:"bytes,7,rep,name=participants,proto3" json:"participants,omitempty"`
	// Read markers
	ReadMarkers []*ReadMarker `protobuf:"bytes,8,rep,name=read_markers,json=readMarkers,proto3" json:"read_markers,omitempty"`
	// Unreaded count
	Unreaded uint32 `protobuf:"varint,10,opt,name=unreaded,proto3" json:"unreaded,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Conversation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Conversation) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *Conversation) GetLastMessageAt() *v1.ProtoTime {
	if x != nil {
		return x.LastMessageAt
	}
	return nil
}

func (x *Conversation) GetDelivered() bool {
	if x != nil {
		return x.Delivered
	}
	return false
}

func (x *Conversation) GetCustomPictureUrl() string {
	if x != nil && x.CustomPictureUrl != nil {
		return *x.CustomPictureUrl
	}
	return ""
}

func (x *Conversation) GetParticipants() []string {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Conversation) GetReadMarkers() []*ReadMarker {
	if x != nil {
		return x.ReadMarkers
	}
	return nil
}

func (x *Conversation) GetUnreaded() uint32 {
	if x != nil {
		return x.Unreaded
	}
	return 0
}

type UserPresence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the user
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Is online or not
	IsOnline bool `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	// Status message (online/away/in-call)
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Status message
	StatusMessage *string `protobuf:"bytes,4,opt,name=status_message,json=statusMessage,proto3,oneof" json:"status_message,omitempty"`
	// Status icon (emoji or :smile: pre-defined emoji)
	StatusIcon *string `protobuf:"bytes,5,opt,name=status_icon,json=statusIcon,proto3,oneof" json:"status_icon,omitempty"`
	// Last online time
	LastOnlineAt *v1.ProtoTime `protobuf:"bytes,6,opt,name=last_online_at,json=lastOnlineAt,proto3" json:"last_online_at,omitempty"`
}

func (x *UserPresence) Reset() {
	*x = UserPresence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPresence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPresence) ProtoMessage() {}

func (x *UserPresence) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPresence.ProtoReflect.Descriptor instead.
func (*UserPresence) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{5}
}

func (x *UserPresence) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserPresence) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *UserPresence) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserPresence) GetStatusMessage() string {
	if x != nil && x.StatusMessage != nil {
		return *x.StatusMessage
	}
	return ""
}

func (x *UserPresence) GetStatusIcon() string {
	if x != nil && x.StatusIcon != nil {
		return *x.StatusIcon
	}
	return ""
}

func (x *UserPresence) GetLastOnlineAt() *v1.ProtoTime {
	if x != nil {
		return x.LastOnlineAt
	}
	return nil
}

type UpdateRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds       []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	UserPresence  []string `protobuf:"bytes,2,rep,name=user_presence,json=userPresence,proto3" json:"user_presence,omitempty"`
	Conversations []string `protobuf:"bytes,3,rep,name=conversations,proto3" json:"conversations,omitempty"`
}

func (x *UpdateRequestMessage) Reset() {
	*x = UpdateRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequestMessage) ProtoMessage() {}

func (x *UpdateRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequestMessage.ProtoReflect.Descriptor instead.
func (*UpdateRequestMessage) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRequestMessage) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *UpdateRequestMessage) GetUserPresence() []string {
	if x != nil {
		return x.UserPresence
	}
	return nil
}

func (x *UpdateRequestMessage) GetConversations() []string {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type ListConversationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListConversationsRequest) Reset() {
	*x = ListConversationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsRequest) ProtoMessage() {}

func (x *ListConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsRequest.ProtoReflect.Descriptor instead.
func (*ListConversationsRequest) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ListConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConversationId string      `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Text           string      `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	MessageType    MessageType `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=qtya.chat.v1.MessageType" json:"message_type,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{8}
}

func (x *SendMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendMessageRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SendMessageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SendMessageRequest) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

type UpdateReadMarkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	LastMessageId  string `protobuf:"bytes,2,opt,name=last_message_id,json=lastMessageId,proto3" json:"last_message_id,omitempty"`
}

func (x *UpdateReadMarkerRequest) Reset() {
	*x = UpdateReadMarkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReadMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadMarkerRequest) ProtoMessage() {}

func (x *UpdateReadMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadMarkerRequest.ProtoReflect.Descriptor instead.
func (*UpdateReadMarkerRequest) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReadMarkerRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateReadMarkerRequest) GetLastMessageId() string {
	if x != nil {
		return x.LastMessageId
	}
	return ""
}

// UpdateConversationRequest
type UpdateConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string  `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	From           *string `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	Limit          uint32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *UpdateConversationRequest) Reset() {
	*x = UpdateConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationRequest) ProtoMessage() {}

func (x *UpdateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationRequest.ProtoReflect.Descriptor instead.
func (*UpdateConversationRequest) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateConversationRequest) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *UpdateConversationRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SelfUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyProfile  *Contact      `protobuf:"bytes,1,opt,name=my_profile,json=myProfile,proto3" json:"my_profile,omitempty"`
	MyPresence *UserPresence `protobuf:"bytes,2,opt,name=my_presence,json=myPresence,proto3" json:"my_presence,omitempty"`
}

func (x *SelfUpdateResponse) Reset() {
	*x = SelfUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfUpdateResponse) ProtoMessage() {}

func (x *SelfUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfUpdateResponse.ProtoReflect.Descriptor instead.
func (*SelfUpdateResponse) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{11}
}

func (x *SelfUpdateResponse) GetMyProfile() *Contact {
	if x != nil {
		return x.MyProfile
	}
	return nil
}

func (x *SelfUpdateResponse) GetMyPresence() *UserPresence {
	if x != nil {
		return x.MyPresence
	}
	return nil
}

type NotificationUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationCount uint32 `protobuf:"varint,1,opt,name=notification_count,json=notificationCount,proto3" json:"notification_count,omitempty"`
	MissedCalls       uint32 `protobuf:"varint,2,opt,name=missed_calls,json=missedCalls,proto3" json:"missed_calls,omitempty"`
	UnreadedMessages  uint32 `protobuf:"varint,3,opt,name=unreaded_messages,json=unreadedMessages,proto3" json:"unreaded_messages,omitempty"`
	Invitations       uint32 `protobuf:"varint,4,opt,name=invitations,proto3" json:"invitations,omitempty"`
}

func (x *NotificationUpdate) Reset() {
	*x = NotificationUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUpdate) ProtoMessage() {}

func (x *NotificationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUpdate.ProtoReflect.Descriptor instead.
func (*NotificationUpdate) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{12}
}

func (x *NotificationUpdate) GetNotificationCount() uint32 {
	if x != nil {
		return x.NotificationCount
	}
	return 0
}

func (x *NotificationUpdate) GetMissedCalls() uint32 {
	if x != nil {
		return x.MissedCalls
	}
	return 0
}

func (x *NotificationUpdate) GetUnreadedMessages() uint32 {
	if x != nil {
		return x.UnreadedMessages
	}
	return 0
}

func (x *NotificationUpdate) GetInvitations() uint32 {
	if x != nil {
		return x.Invitations
	}
	return 0
}

type ChatMessageUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	IsNew    bool           `protobuf:"varint,2,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (x *ChatMessageUpdateResponse) Reset() {
	*x = ChatMessageUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageUpdateResponse) ProtoMessage() {}

func (x *ChatMessageUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageUpdateResponse.ProtoReflect.Descriptor instead.
func (*ChatMessageUpdateResponse) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{13}
}

func (x *ChatMessageUpdateResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatMessageUpdateResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

// EventStreamRequest ...
type EventStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*EventStreamRequest_SendMessageRequest
	//	*EventStreamRequest_UpdateRequest
	//	*EventStreamRequest_UpdatePresence
	//	*EventStreamRequest_ConversationsRequest
	//	*EventStreamRequest_UpdateConversationRequest
	Request isEventStreamRequest_Request `protobuf_oneof:"request"`
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamRequest.ProtoReflect.Descriptor instead.
func (*EventStreamRequest) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{14}
}

func (m *EventStreamRequest) GetRequest() isEventStreamRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *EventStreamRequest) GetSendMessageRequest() *SendMessageRequest {
	if x, ok := x.GetRequest().(*EventStreamRequest_SendMessageRequest); ok {
		return x.SendMessageRequest
	}
	return nil
}

func (x *EventStreamRequest) GetUpdateRequest() *UpdateRequestMessage {
	if x, ok := x.GetRequest().(*EventStreamRequest_UpdateRequest); ok {
		return x.UpdateRequest
	}
	return nil
}

func (x *EventStreamRequest) GetUpdatePresence() *UserPresence {
	if x, ok := x.GetRequest().(*EventStreamRequest_UpdatePresence); ok {
		return x.UpdatePresence
	}
	return nil
}

func (x *EventStreamRequest) GetConversationsRequest() *ListConversationsRequest {
	if x, ok := x.GetRequest().(*EventStreamRequest_ConversationsRequest); ok {
		return x.ConversationsRequest
	}
	return nil
}

func (x *EventStreamRequest) GetUpdateConversationRequest() *UpdateConversationRequest {
	if x, ok := x.GetRequest().(*EventStreamRequest_UpdateConversationRequest); ok {
		return x.UpdateConversationRequest
	}
	return nil
}

type isEventStreamRequest_Request interface {
	isEventStreamRequest_Request()
}

type EventStreamRequest_SendMessageRequest struct {
	SendMessageRequest *SendMessageRequest `protobuf:"bytes,1,opt,name=send_message_request,json=sendMessageRequest,proto3,oneof"`
}

type EventStreamRequest_UpdateRequest struct {
	UpdateRequest *UpdateRequestMessage `protobuf:"bytes,2,opt,name=update_request,json=updateRequest,proto3,oneof"`
}

type EventStreamRequest_UpdatePresence struct {
	UpdatePresence *UserPresence `protobuf:"bytes,3,opt,name=update_presence,json=updatePresence,proto3,oneof"`
}

type EventStreamRequest_ConversationsRequest struct {
	ConversationsRequest *ListConversationsRequest `protobuf:"bytes,4,opt,name=conversations_request,json=conversationsRequest,proto3,oneof"`
}

type EventStreamRequest_UpdateConversationRequest struct {
	UpdateConversationRequest *UpdateConversationRequest `protobuf:"bytes,5,opt,name=update_conversation_request,json=updateConversationRequest,proto3,oneof"`
}

func (*EventStreamRequest_SendMessageRequest) isEventStreamRequest_Request() {}

func (*EventStreamRequest_UpdateRequest) isEventStreamRequest_Request() {}

func (*EventStreamRequest_UpdatePresence) isEventStreamRequest_Request() {}

func (*EventStreamRequest_ConversationsRequest) isEventStreamRequest_Request() {}

func (*EventStreamRequest_UpdateConversationRequest) isEventStreamRequest_Request() {}

// ServerUpdateMessage servermessage
type EventStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//
	//	*EventStreamResponse_MessageUpdate
	//	*EventStreamResponse_ContactUpdate
	//	*EventStreamResponse_PresenceUpdate
	//	*EventStreamResponse_ConversationUpdate
	//	*EventStreamResponse_SelfUpdate
	//	*EventStreamResponse_NotificationUpdate
	Update isEventStreamResponse_Update `protobuf_oneof:"update"`
}

func (x *EventStreamResponse) Reset() {
	*x = EventStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamResponse) ProtoMessage() {}

func (x *EventStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStreamResponse.ProtoReflect.Descriptor instead.
func (*EventStreamResponse) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{15}
}

func (m *EventStreamResponse) GetUpdate() isEventStreamResponse_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *EventStreamResponse) GetMessageUpdate() *ChatMessageUpdateResponse {
	if x, ok := x.GetUpdate().(*EventStreamResponse_MessageUpdate); ok {
		return x.MessageUpdate
	}
	return nil
}

func (x *EventStreamResponse) GetContactUpdate() *Contact {
	if x, ok := x.GetUpdate().(*EventStreamResponse_ContactUpdate); ok {
		return x.ContactUpdate
	}
	return nil
}

func (x *EventStreamResponse) GetPresenceUpdate() *UserPresence {
	if x, ok := x.GetUpdate().(*EventStreamResponse_PresenceUpdate); ok {
		return x.PresenceUpdate
	}
	return nil
}

func (x *EventStreamResponse) GetConversationUpdate() *Conversation {
	if x, ok := x.GetUpdate().(*EventStreamResponse_ConversationUpdate); ok {
		return x.ConversationUpdate
	}
	return nil
}

func (x *EventStreamResponse) GetSelfUpdate() *SelfUpdateResponse {
	if x, ok := x.GetUpdate().(*EventStreamResponse_SelfUpdate); ok {
		return x.SelfUpdate
	}
	return nil
}

func (x *EventStreamResponse) GetNotificationUpdate() *NotificationUpdate {
	if x, ok := x.GetUpdate().(*EventStreamResponse_NotificationUpdate); ok {
		return x.NotificationUpdate
	}
	return nil
}

type isEventStreamResponse_Update interface {
	isEventStreamResponse_Update()
}

type EventStreamResponse_MessageUpdate struct {
	MessageUpdate *ChatMessageUpdateResponse `protobuf:"bytes,2,opt,name=message_update,json=messageUpdate,proto3,oneof"`
}

type EventStreamResponse_ContactUpdate struct {
	ContactUpdate *Contact `protobuf:"bytes,3,opt,name=contact_update,json=contactUpdate,proto3,oneof"`
}

type EventStreamResponse_PresenceUpdate struct {
	PresenceUpdate *UserPresence `protobuf:"bytes,4,opt,name=presence_update,json=presenceUpdate,proto3,oneof"`
}

type EventStreamResponse_ConversationUpdate struct {
	ConversationUpdate *Conversation `protobuf:"bytes,5,opt,name=conversation_update,json=conversationUpdate,proto3,oneof"`
}

type EventStreamResponse_SelfUpdate struct {
	SelfUpdate *SelfUpdateResponse `protobuf:"bytes,6,opt,name=self_update,json=selfUpdate,proto3,oneof"`
}

type EventStreamResponse_NotificationUpdate struct {
	NotificationUpdate *NotificationUpdate `protobuf:"bytes,7,opt,name=notification_update,json=notificationUpdate,proto3,oneof"`
}

func (*EventStreamResponse_MessageUpdate) isEventStreamResponse_Update() {}

func (*EventStreamResponse_ContactUpdate) isEventStreamResponse_Update() {}

func (*EventStreamResponse_PresenceUpdate) isEventStreamResponse_Update() {}

func (*EventStreamResponse_ConversationUpdate) isEventStreamResponse_Update() {}

func (*EventStreamResponse_SelfUpdate) isEventStreamResponse_Update() {}

func (*EventStreamResponse_NotificationUpdate) isEventStreamResponse_Update() {}

// AuthenticateRequest
type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *string `protobuf:"bytes,2,opt,name=token,proto3,oneof" json:"token,omitempty"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{16}
}

func (x *AuthenticateRequest) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

// AuthenticateResponse
type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason  *string `protobuf:"bytes,2,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qtya_chat_v1_chat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qtya_chat_v1_chat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_qtya_chat_v1_chat_proto_rawDescGZIP(), []int{17}
}

func (x *AuthenticateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthenticateResponse) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

var file_qtya_chat_v1_chat_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "qtya.chat.v1.version",
		Tag:           "bytes,50001,opt,name=version",
		Filename:      "qtya/chat/v1/chat.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50000,
		Name:          "qtya.chat.v1.string_name",
		Tag:           "bytes,50000,opt,name=string_name",
		Filename:      "qtya/chat/v1/chat.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50002,
		Name:          "qtya.chat.v1.description",
		Tag:           "bytes,50002,opt,name=description",
		Filename:      "qtya/chat/v1/chat.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         50003,
		Name:          "qtya.chat.v1.usages",
		Tag:           "bytes,50003,rep,name=usages",
		Filename:      "qtya/chat/v1/chat.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional string version = 50001;
	E_Version = &file_qtya_chat_v1_chat_proto_extTypes[0]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string string_name = 50000;
	E_StringName = &file_qtya_chat_v1_chat_proto_extTypes[1]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string description = 50002;
	E_Description = &file_qtya_chat_v1_chat_proto_extTypes[2]
	// repeated string usages = 50003;
	E_Usages = &file_qtya_chat_v1_chat_proto_extTypes[3]
)

var File_qtya_chat_v1_chat_proto protoreflect.FileDescriptor

var file_qtya_chat_v1_chat_proto_rawDesc = []byte{
	0x0a, 0x17, 0x71, 0x74, 0x79, 0x61, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x71, 0x74, 0x79, 0x61, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x71, 0x74, 0x79, 0x61, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x36, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xe0, 0x03, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52,
	0x06, 0x73, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x65, 0x65,
	0x6e, 0x5f, 0x61, 0x74, 0x22, 0x85, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71,
	0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a,
	0x07, 0x71, 0x74, 0x79, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x06, 0x71, 0x74, 0x79, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x74, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x71, 0x74, 0x79, 0x61, 0x5f, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x0a,
	0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x22, 0xa2, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x3b,
	0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x90, 0x02, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x33, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa8, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x09, 0x6d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x6d, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0a, 0x6d, 0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a,
	0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x65,
	0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x69, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e,
	0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x22,
	0xd3, 0x03, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x5d, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x69, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe1, 0x03, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x45, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x74, 0x79,
	0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x13, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x58, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a,
	0xd4, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x21, 0x0a, 0x19, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a,
	0x02, 0x08, 0x01, 0x12, 0x26, 0x0a, 0x15, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x01, 0x1a, 0x0b,
	0x82, 0xb5, 0x18, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x12, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x10, 0x02, 0x1a, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x1b, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x1a, 0x0c,
	0x82, 0xb5, 0x18, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x1a,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x41,
	0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x10, 0x04, 0x1a, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x2a, 0xb3, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x1a, 0x08, 0x82, 0xb5, 0x18,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x1a, 0x09, 0x82,
	0xb5, 0x18, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x03,
	0x1a, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x11, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x4c, 0x4c,
	0x10, 0x04, 0x1a, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x32, 0xc0, 0x01, 0x0a,
	0x0b, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0c,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x71,
	0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x71, 0x74, 0x79, 0x61, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x3a,
	0x38, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x47, 0x0a, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x3a, 0x46, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd2, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x3a, 0x39, 0x0a, 0x06, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd3, 0x86, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x3b, 0x8a, 0xb5, 0x18, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x74, 0x79,
	0x61, 0x70, 0x70, 0x2f, 0x71, 0x74, 0x79, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71,
	0x74, 0x79, 0x61, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x74,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qtya_chat_v1_chat_proto_rawDescOnce sync.Once
	file_qtya_chat_v1_chat_proto_rawDescData = file_qtya_chat_v1_chat_proto_rawDesc
)

func file_qtya_chat_v1_chat_proto_rawDescGZIP() []byte {
	file_qtya_chat_v1_chat_proto_rawDescOnce.Do(func() {
		file_qtya_chat_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_qtya_chat_v1_chat_proto_rawDescData)
	})
	return file_qtya_chat_v1_chat_proto_rawDescData
}

var file_qtya_chat_v1_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_qtya_chat_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_qtya_chat_v1_chat_proto_goTypes = []interface{}{
	(UpdateTarget)(0),                     // 0: qtya.chat.v1.UpdateTarget
	(MessageType)(0),                      // 1: qtya.chat.v1.MessageType
	(*MessageReaction)(nil),               // 2: qtya.chat.v1.MessageReaction
	(*ChatMessage)(nil),                   // 3: qtya.chat.v1.ChatMessage
	(*Contact)(nil),                       // 4: qtya.chat.v1.Contact
	(*ReadMarker)(nil),                    // 5: qtya.chat.v1.ReadMarker
	(*Conversation)(nil),                  // 6: qtya.chat.v1.Conversation
	(*UserPresence)(nil),                  // 7: qtya.chat.v1.UserPresence
	(*UpdateRequestMessage)(nil),          // 8: qtya.chat.v1.UpdateRequestMessage
	(*ListConversationsRequest)(nil),      // 9: qtya.chat.v1.ListConversationsRequest
	(*SendMessageRequest)(nil),            // 10: qtya.chat.v1.SendMessageRequest
	(*UpdateReadMarkerRequest)(nil),       // 11: qtya.chat.v1.UpdateReadMarkerRequest
	(*UpdateConversationRequest)(nil),     // 12: qtya.chat.v1.UpdateConversationRequest
	(*SelfUpdateResponse)(nil),            // 13: qtya.chat.v1.SelfUpdateResponse
	(*NotificationUpdate)(nil),            // 14: qtya.chat.v1.NotificationUpdate
	(*ChatMessageUpdateResponse)(nil),     // 15: qtya.chat.v1.ChatMessageUpdateResponse
	(*EventStreamRequest)(nil),            // 16: qtya.chat.v1.EventStreamRequest
	(*EventStreamResponse)(nil),           // 17: qtya.chat.v1.EventStreamResponse
	(*AuthenticateRequest)(nil),           // 18: qtya.chat.v1.AuthenticateRequest
	(*AuthenticateResponse)(nil),          // 19: qtya.chat.v1.AuthenticateResponse
	(*v1.ProtoTime)(nil),                  // 20: qtya.core.v1.ProtoTime
	(*descriptorpb.FileOptions)(nil),      // 21: google.protobuf.FileOptions
	(*descriptorpb.EnumValueOptions)(nil), // 22: google.protobuf.EnumValueOptions
	(*descriptorpb.MessageOptions)(nil),   // 23: google.protobuf.MessageOptions
}
var file_qtya_chat_v1_chat_proto_depIdxs = []int32{
	20, // 0: qtya.chat.v1.MessageReaction.updated_at:type_name -> qtya.core.v1.ProtoTime
	20, // 1: qtya.chat.v1.ChatMessage.sent_at:type_name -> qtya.core.v1.ProtoTime
	2,  // 2: qtya.chat.v1.ChatMessage.reactions:type_name -> qtya.chat.v1.MessageReaction
	20, // 3: qtya.chat.v1.ChatMessage.deleted_at:type_name -> qtya.core.v1.ProtoTime
	20, // 4: qtya.chat.v1.ChatMessage.seen_at:type_name -> qtya.core.v1.ProtoTime
	20, // 5: qtya.chat.v1.Contact.registered_at:type_name -> qtya.core.v1.ProtoTime
	20, // 6: qtya.chat.v1.Contact.last_online:type_name -> qtya.core.v1.ProtoTime
	20, // 7: qtya.chat.v1.Conversation.last_message_at:type_name -> qtya.core.v1.ProtoTime
	5,  // 8: qtya.chat.v1.Conversation.read_markers:type_name -> qtya.chat.v1.ReadMarker
	20, // 9: qtya.chat.v1.UserPresence.last_online_at:type_name -> qtya.core.v1.ProtoTime
	1,  // 10: qtya.chat.v1.SendMessageRequest.message_type:type_name -> qtya.chat.v1.MessageType
	4,  // 11: qtya.chat.v1.SelfUpdateResponse.my_profile:type_name -> qtya.chat.v1.Contact
	7,  // 12: qtya.chat.v1.SelfUpdateResponse.my_presence:type_name -> qtya.chat.v1.UserPresence
	3,  // 13: qtya.chat.v1.ChatMessageUpdateResponse.messages:type_name -> qtya.chat.v1.ChatMessage
	10, // 14: qtya.chat.v1.EventStreamRequest.send_message_request:type_name -> qtya.chat.v1.SendMessageRequest
	8,  // 15: qtya.chat.v1.EventStreamRequest.update_request:type_name -> qtya.chat.v1.UpdateRequestMessage
	7,  // 16: qtya.chat.v1.EventStreamRequest.update_presence:type_name -> qtya.chat.v1.UserPresence
	9,  // 17: qtya.chat.v1.EventStreamRequest.conversations_request:type_name -> qtya.chat.v1.ListConversationsRequest
	12, // 18: qtya.chat.v1.EventStreamRequest.update_conversation_request:type_name -> qtya.chat.v1.UpdateConversationRequest
	15, // 19: qtya.chat.v1.EventStreamResponse.message_update:type_name -> qtya.chat.v1.ChatMessageUpdateResponse
	4,  // 20: qtya.chat.v1.EventStreamResponse.contact_update:type_name -> qtya.chat.v1.Contact
	7,  // 21: qtya.chat.v1.EventStreamResponse.presence_update:type_name -> qtya.chat.v1.UserPresence
	6,  // 22: qtya.chat.v1.EventStreamResponse.conversation_update:type_name -> qtya.chat.v1.Conversation
	13, // 23: qtya.chat.v1.EventStreamResponse.self_update:type_name -> qtya.chat.v1.SelfUpdateResponse
	14, // 24: qtya.chat.v1.EventStreamResponse.notification_update:type_name -> qtya.chat.v1.NotificationUpdate
	21, // 25: qtya.chat.v1.version:extendee -> google.protobuf.FileOptions
	22, // 26: qtya.chat.v1.string_name:extendee -> google.protobuf.EnumValueOptions
	23, // 27: qtya.chat.v1.description:extendee -> google.protobuf.MessageOptions
	23, // 28: qtya.chat.v1.usages:extendee -> google.protobuf.MessageOptions
	18, // 29: qtya.chat.v1.ChatService.Authenticate:input_type -> qtya.chat.v1.AuthenticateRequest
	16, // 30: qtya.chat.v1.ChatService.EventStream:input_type -> qtya.chat.v1.EventStreamRequest
	19, // 31: qtya.chat.v1.ChatService.Authenticate:output_type -> qtya.chat.v1.AuthenticateResponse
	17, // 32: qtya.chat.v1.ChatService.EventStream:output_type -> qtya.chat.v1.EventStreamResponse
	31, // [31:33] is the sub-list for method output_type
	29, // [29:31] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	25, // [25:29] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_qtya_chat_v1_chat_proto_init() }
func file_qtya_chat_v1_chat_proto_init() {
	if File_qtya_chat_v1_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qtya_chat_v1_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMarker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPresence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReadMarkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qtya_chat_v1_chat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qtya_chat_v1_chat_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_qtya_chat_v1_chat_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_qtya_chat_v1_chat_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_qtya_chat_v1_chat_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_qtya_chat_v1_chat_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_qtya_chat_v1_chat_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*EventStreamRequest_SendMessageRequest)(nil),
		(*EventStreamRequest_UpdateRequest)(nil),
		(*EventStreamRequest_UpdatePresence)(nil),
		(*EventStreamRequest_ConversationsRequest)(nil),
		(*EventStreamRequest_UpdateConversationRequest)(nil),
	}
	file_qtya_chat_v1_chat_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*EventStreamResponse_MessageUpdate)(nil),
		(*EventStreamResponse_ContactUpdate)(nil),
		(*EventStreamResponse_PresenceUpdate)(nil),
		(*EventStreamResponse_ConversationUpdate)(nil),
		(*EventStreamResponse_SelfUpdate)(nil),
		(*EventStreamResponse_NotificationUpdate)(nil),
	}
	file_qtya_chat_v1_chat_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_qtya_chat_v1_chat_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qtya_chat_v1_chat_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 4,
			NumServices:   1,
		},
		GoTypes:           file_qtya_chat_v1_chat_proto_goTypes,
		DependencyIndexes: file_qtya_chat_v1_chat_proto_depIdxs,
		EnumInfos:         file_qtya_chat_v1_chat_proto_enumTypes,
		MessageInfos:      file_qtya_chat_v1_chat_proto_msgTypes,
		ExtensionInfos:    file_qtya_chat_v1_chat_proto_extTypes,
	}.Build()
	File_qtya_chat_v1_chat_proto = out.File
	file_qtya_chat_v1_chat_proto_rawDesc = nil
	file_qtya_chat_v1_chat_proto_goTypes = nil
	file_qtya_chat_v1_chat_proto_depIdxs = nil
}
